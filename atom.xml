<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-02T10:26:43.294Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ximoxiyu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>写博客随笔</title>
    <link href="http://yoursite.com/2020/03/02/%E9%9A%8F%E7%AC%94/"/>
    <id>http://yoursite.com/2020/03/02/%E9%9A%8F%E7%AC%94/</id>
    <published>2020-03-02T07:42:15.000Z</published>
    <updated>2020-03-02T10:26:43.294Z</updated>
    
    <content type="html"><![CDATA[<h2 id="利用VScode写markdown"><a href="#利用VScode写markdown" class="headerlink" title="利用VScode写markdown"></a>利用VScode写markdown</h2><p>  通过百度和坚持使用，逐渐熟悉.md的格式，利用博客记录学习前端的过程，总结笔记，push自己走出舒适区</p><h2 id="为什么写博客"><a href="#为什么写博客" class="headerlink" title="为什么写博客"></a>为什么写博客</h2><p>  1）发现问题，解决问题，记录方法，分享借鉴</p><p>  2）在写作的过程中，再次梳理知识体系</p><p>  3）坚持学习，坚持记笔记，坚持动手测试</p><p>  4）最重要的是迈出第一步，之后进一寸有一寸的欢喜</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;利用VScode写markdown&quot;&gt;&lt;a href=&quot;#利用VScode写markdown&quot; class=&quot;headerlink&quot; title=&quot;利用VScode写markdown&quot;&gt;&lt;/a&gt;利用VScode写markdown&lt;/h2&gt;&lt;p&gt;  通过百度和坚持使
      
    
    </summary>
    
    
    
      <category term="markdown Blog" scheme="http://yoursite.com/tags/markdown-Blog/"/>
    
  </entry>
  
  <entry>
    <title>Vue第三期学习I</title>
    <link href="http://yoursite.com/2020/03/02/Vue%E7%AC%AC%E4%B8%89%E6%9C%9F%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/03/02/Vue%E7%AC%AC%E4%B8%89%E6%9C%9F%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-03-02T07:40:01.000Z</published>
    <updated>2020-03-02T10:31:40.427Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程安排-9-1"><a href="#课程安排-9-1" class="headerlink" title="课程安排(9+1)"></a>课程安排(9+1)</h2><h2 id="1）播放器的页面信息展示–模板语法"><a href="#1）播放器的页面信息展示–模板语法" class="headerlink" title="1）播放器的页面信息展示–模板语法"></a>1）播放器的页面信息展示–模板语法</h2><p>vue:渐进式框架，省写dom操作<br>Vue框架的核心思想是数据驱动</p><h3 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">插值：&#123;&#123;&#125;&#125;,内可为变量、单个表达式</span><br><span class="line">注：正确写法</span><br><span class="line">&#123;&#123; 1&gt;2 ? message : message + <span class="string">'1'</span> &#125;&#125;</span><br><span class="line">错误写法！！！</span><br><span class="line">1）不能为语句</span><br><span class="line">~~&#123;&#123;var a=1&#125;&#125;  ~~</span><br><span class="line">2）不能为多个表达式，以下为三元</span><br><span class="line">~~&#123;&#123;<span class="keyword">if</span> (ok)&#123;<span class="built_in">return</span> message&#125;&#125;&#125;  ~~</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//在html中</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;div id=<span class="string">"app"</span>&gt; &#123;&#123;message&#125;&#125;&lt;/div&gt;</span><br><span class="line">//在js中</span><br><span class="line">const app = new Vue(&#123;</span><br><span class="line">    el：<span class="string">'#app'</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        message:<span class="string">'你好'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">过程分析：1）html引入Vue库，在js中新建Vue实例，由el:<span class="string">'#app'</span>将页面上id=<span class="string">'app'</span>的节点绑定（即div标签）</span><br><span class="line">2）Vue实例监听data中message的改动---反应在&#123;&#123;message&#125;&#125;上</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;message&#125;&#125;,啧啧啧&lt;/h2&gt;</span><br><span class="line">   &lt;!-- Mustache的语法不仅可以直接写变量，还可以写简单表达式 --&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;firstName + lastName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;firstName + <span class="string">" "</span> + lastName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;firstName&#125;&#125;&#123;&#123;lastName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;count * 2&#125;&#125;&lt;/h2&gt;</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">关于计算(数值与字符串)</span><br><span class="line">其中 message:17</span><br><span class="line">1)&#123;&#123;message + <span class="string">'12'</span>&#125;&#125;-----1712</span><br><span class="line">2)&#123;&#123;message + 12&#125;&#125;----29</span><br><span class="line">若：message:<span class="string">'17'</span></span><br><span class="line">&#123;&#123;message + 12&#125;&#125;----1712</span><br></pre></td></tr></table></figure><h3 id="原生js-VS-vue"><a href="#原生js-VS-vue" class="headerlink" title="原生js VS vue"></a>原生js VS vue</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">【目标】改变页面hello world</span><br><span class="line">先找此节点，再改节点内容</span><br><span class="line">**只改变message，页面自动变（仅关注数据）**</span><br></pre></td></tr></table></figure><hr><h2 id="2-实现点击播放音乐–指令-amp-事件监听"><a href="#2-实现点击播放音乐–指令-amp-事件监听" class="headerlink" title="2)实现点击播放音乐–指令&amp;事件监听"></a>2)实现点击播放音乐–指令&amp;事件监听</h2><h3 id="audio标签的学习"><a href="#audio标签的学习" class="headerlink" title="audio标签的学习"></a>audio标签的学习</h3><h4 id="原生js写音乐播放器"><a href="#原生js写音乐播放器" class="headerlink" title="原生js写音乐播放器"></a>原生js写音乐播放器</h4><p>1.audio的属性使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio src=<span class="string">"http://q4v2i1axn.bkt.clouddn.com/music1.mp3"</span> controls&gt;&lt;/audio&gt;</span><br><span class="line">属性：1）src---资源位置</span><br><span class="line">2）controls--是否展示进度条</span><br><span class="line">进度条作用：控制音频的播放与暂停及当前的播放进度</span><br><span class="line">3）注：音乐播放器中的进度条与控制播放暂停自己定义，故删去controls属性</span><br></pre></td></tr></table></figure><p>2.audio标签的方法<br>play:播放音频<br>pause:暂停音频</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//原生JS实现</span><br><span class="line">【html】</span><br><span class="line">&lt;audio id=<span class="string">"player"</span> src=<span class="string">"http://q4v2i1axn.bkt.clouddn.com/music1.mp3"</span>&gt;&lt;/audio&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"playMusic()"</span>&gt;播放&lt;/button&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"pauseMusic()"</span>&gt;暂停&lt;/button&gt;</span><br><span class="line">【js】</span><br><span class="line">//获取DOM节点</span><br><span class="line">var player = document.querySelector(<span class="string">'#player'</span>);</span><br><span class="line">// 播放音乐</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">playMusic</span></span>() &#123;</span><br><span class="line">  player.play();  // 调用play方法</span><br><span class="line">&#125;</span><br><span class="line">// 暂停播放</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">pauseMusic</span></span>() &#123;</span><br><span class="line">  player.pause();  // 调用pause方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Vue中的指令及事件监听"><a href="#Vue中的指令及事件监听" class="headerlink" title="Vue中的指令及事件监听"></a>Vue中的指令及事件监听</h3><p>指令：带v-前缀的特殊属性，常用v-bind,v-on,v-if<br>1)利用v-bind绑定属性，将audio标签中的src的属性值写入Vue实例的data中 v-bind:src(原标签属性)=’audio’(Vue实例data中定义的属性)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.v-bind用于绑定一个或多个属性值，开发中，常需要动态绑定src/href/类class/样式style</span><br><span class="line">2.语法糖:</span><br><span class="line">3.绑定class属性</span><br><span class="line">1)直接赋值class属性  &lt;h2 class=<span class="string">"active"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">2）绑定一个，相比（1）没优点 &lt;h2 :class=<span class="string">"active"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">3)v-bind动态绑定class属性（对象语法）&#123;&#125;</span><br><span class="line">&lt;h2 class=<span class="string">"title"</span> :class=<span class="string">"&#123;'active': isActive, 'line': isLine&#125;"</span>&gt;Hello World&lt;/h2&gt;</span><br><span class="line">4)v-bind动态绑定class(数组用法)--少[]</span><br><span class="line">&lt;h2 class=<span class="string">"title"</span> :class=<span class="string">"['active', 'line']"</span>&gt;Hello World&lt;/h2&gt; --[]加<span class="string">''</span>字符串，不加是变量</span><br><span class="line">5)v-bind动态绑定style(对象语法)</span><br><span class="line"> &lt;!-- &lt;h2 :style=<span class="string">"&#123;key(属性名):value(属性值)&#125;"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt; --&gt;</span><br><span class="line">    &lt;!--方法一 加单引号，当成字符串解析 --&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"&#123;fontSize:'50px'&#125;"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;!--方法二 不加单引号，变量解析 --&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"&#123;fontSize:fontSize&#125;"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;!--方法三 函数--&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"getStyle()"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">6)v-bind动态绑定style(数组语法)</span><br><span class="line"> &lt;!--两种方法--&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"[baseStyle]"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"getStyle()"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br></pre></td></tr></table></figure><p>2)v-if:控制元素是否渲染(用的不多)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 v-if=<span class="string">"isFlag"</span>&gt;isFlag为<span class="literal">true</span>显示这个&lt;/h2&gt;</span><br><span class="line">v-if指令就是根据=号后边的变量的取值，来判断是否渲染这个元素【结合标签使用，决定html是否渲染此标签】</span><br><span class="line">1.&lt;!--​v-if用于条件判断，判断Dom元素是否显示。或者销毁元素或组件,单独使用v-if，变量为布尔值，为<span class="literal">true</span>才渲染Dom</span><br><span class="line">2. v-show的变量也是布尔值，为<span class="literal">true</span>才显示内容，类似css的display</span><br><span class="line">3. v-if、v-else、v-else-if联合使用相当于<span class="keyword">if</span>、elseif、<span class="keyword">else</span>，但是在条件比较多的时候建议使用计算属性--&gt;</span><br><span class="line">4. &lt;!-- 添加key主要是为了让vue不复用dom，如果不添加vue底层会复用dom --&gt;</span><br><span class="line"> &lt;!--v-if看似和v-show实现一样的效果，但是内部v-show只是用css将操作的元素隐藏显示，</span><br><span class="line">    而v-if是新增和删除元素。v-show只是操作元素的style属性display，都没会被创建--&gt;</span><br></pre></td></tr></table></figure><p>3)v-on:事件监听<br>v-on:事件名=”函数名”（定义在methods中，不加())</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1.参数传参</span><br><span class="line"> &lt;!-- 事件没传参，两种方式均可 --&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick"</span>&gt;按钮1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick()"</span>&gt;按钮2&lt;/button&gt;</span><br><span class="line">    &lt;!-- 事件调用方法传参，写函数时候省略小括号，但是函数本身需要传递一个参数 --&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick2(123)"</span>&gt;按钮3&lt;/button&gt;</span><br><span class="line">    &lt;!--报错、默认将原生事件event传递,同按钮6前半部分--&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick2()"</span>&gt;按钮4&lt;/button&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick2"</span>&gt;按钮5&lt;/button&gt;</span><br><span class="line">    &lt;!-- 事件调用时候需要传入event还需要传入其他参数 ，如何手动的获取到浏览器参数的event对象: <span class="variable">$event</span>--&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick3(<span class="variable">$event</span>,123)"</span>&gt;按钮6&lt;/button&gt;</span><br><span class="line">2.v-on的修饰符的使用</span><br><span class="line">&lt;!--1. 点击--.stop的使用，btn的click事件不会传播，不会冒泡到上层，调用event.stopPropagation() --&gt;</span><br><span class="line">    &lt;div @click=<span class="string">"divClick"</span>&gt;</span><br><span class="line">        &lt;button @click.stop=<span class="string">"btnClick"</span>&gt;按钮1&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 2. 提交--.prevent 调用event.preventDefault阻止默认行为  --&gt;</span><br><span class="line">    &lt;form action=<span class="string">"www.baidu.com"</span>&gt;</span><br><span class="line">      &lt;button <span class="built_in">type</span>=<span class="string">"submit"</span> @click.prevent=<span class="string">"submitClick"</span>&gt;提交&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;!--3. 文本框---监听键盘的事件 --&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> @click.enter=<span class="string">"key-up"</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="补充拓展–监听元素的点击事件"><a href="#补充拓展–监听元素的点击事件" class="headerlink" title="补充拓展–监听元素的点击事件"></a>补充拓展–监听元素的点击事件</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[原生js]</span><br><span class="line">1.直接写在html上---onclick</span><br><span class="line">&lt;button onclick=<span class="string">"click()"</span>&gt;click-me&lt;/button&gt;</span><br><span class="line">2.指定onclick属性</span><br><span class="line">&lt;button id=<span class="string">"btn"</span>&gt;click-me&lt;/button&gt;</span><br><span class="line">var btn=document.getElementById(<span class="string">'btn'</span>);</span><br><span class="line">btn.onclick=<span class="function"><span class="title">function</span></span>()&#123;&#125;</span><br><span class="line">3.调用addEventListener方法</span><br><span class="line">&lt;button id=<span class="string">"btn"</span>&gt;click-me&lt;/button&gt;</span><br><span class="line">var btn=document.getElementById(<span class="string">'btn'</span>);</span><br><span class="line">btn.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="title">function</span></span>()&#123;&#125;)</span><br><span class="line">注：2.3方法的区别，更习惯于用2，3可以加多个函数！但兼容性问题</span><br><span class="line">4.Vue框架--v-on事件绑定</span><br><span class="line">&lt;button v-on:click=<span class="string">"click"</span>&gt;click-me&lt;/button&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="3）实现封面的自动旋转–class与style绑定"><a href="#3）实现封面的自动旋转–class与style绑定" class="headerlink" title="3）实现封面的自动旋转–class与style绑定"></a>3）实现封面的自动旋转–class与style绑定</h2><h2 id="4）实现进度条—计算属性"><a href="#4）实现进度条—计算属性" class="headerlink" title="4）实现进度条—计算属性"></a>4）实现进度条—计算属性</h2><h2 id="5）实现评论列表–列表渲染"><a href="#5）实现评论列表–列表渲染" class="headerlink" title="5）实现评论列表–列表渲染"></a>5）实现评论列表–列表渲染</h2><h2 id="6）实现发表评论–表单输入绑定"><a href="#6）实现发表评论–表单输入绑定" class="headerlink" title="6）实现发表评论–表单输入绑定"></a>6）实现发表评论–表单输入绑定</h2><h2 id="7）-视频-本地搭建vue-Hello-World"><a href="#7）-视频-本地搭建vue-Hello-World" class="headerlink" title="7）[视频]本地搭建vue Hello World"></a>7）[视频]本地搭建vue Hello World</h2><h2 id="8）-视频-迁移项目到本地"><a href="#8）-视频-迁移项目到本地" class="headerlink" title="8）[视频]迁移项目到本地"></a>8）[视频]迁移项目到本地</h2><h2 id="9）-视频-抽离子组件（父子组件的通信）"><a href="#9）-视频-抽离子组件（父子组件的通信）" class="headerlink" title="9）[视频]抽离子组件（父子组件的通信）"></a>9）[视频]抽离子组件（父子组件的通信）</h2><h2 id="10）大作业"><a href="#10）大作业" class="headerlink" title="10）大作业"></a>10）大作业</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;课程安排-9-1&quot;&gt;&lt;a href=&quot;#课程安排-9-1&quot; class=&quot;headerlink&quot; title=&quot;课程安排(9+1)&quot;&gt;&lt;/a&gt;课程安排(9+1)&lt;/h2&gt;&lt;h2 id=&quot;1）播放器的页面信息展示–模板语法&quot;&gt;&lt;a href=&quot;#1）播放器的页面信息
      
    
    </summary>
    
    
    
      <category term="Vue学习" scheme="http://yoursite.com/tags/Vue%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>first</title>
    <link href="http://yoursite.com/2020/03/01/first/"/>
    <id>http://yoursite.com/2020/03/01/first/</id>
    <published>2020-03-01T11:41:29.000Z</published>
    <updated>2020-03-01T13:44:07.459Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端学习–vue创建项目"><a href="#前端学习–vue创建项目" class="headerlink" title="前端学习–vue创建项目"></a>前端学习–vue创建项目</h2><h3 id="在桌面上创建一个项目"><a href="#在桌面上创建一个项目" class="headerlink" title="在桌面上创建一个项目"></a>在桌面上创建一个项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//在命令行窗口打开</span><br><span class="line"><span class="built_in">cd</span> desktop</span><br><span class="line"><span class="built_in">cd</span> sun //创建sun文件夹</span><br><span class="line">vue create 项目名</span><br><span class="line"><span class="built_in">cd</span> 项目名</span><br></pre></td></tr></table></figure><h3 id="先切换再执行"><a href="#先切换再执行" class="headerlink" title="先切换再执行"></a>先切换再执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm run build </span><br><span class="line">//在根目录下新建vue.config.js并在内添加代码</span><br><span class="line">module.exports=&#123;</span><br><span class="line">    publicPath:<span class="string">'./'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在App-vue中修改内容"><a href="#在App-vue中修改内容" class="headerlink" title="在App.vue中修改内容"></a>在App.vue中修改内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br><span class="line">//打开<span class="built_in">local</span>中的地址，用ctrl+C来执行退出</span><br></pre></td></tr></table></figure><h3 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">package.json----项目入口Main.js---根项目组件App.vue---项目子组件helloworld.vue</span><br></pre></td></tr></table></figure><h4 id="纪念第一篇博客"><a href="#纪念第一篇博客" class="headerlink" title="纪念第一篇博客"></a>纪念第一篇博客</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">写博客：</span><br><span class="line">$ hexo n <span class="string">"文章名"</span> //新建文章</span><br><span class="line">$ hexo d -g   //推送到服务器</span><br><span class="line">我的安装版本号</span><br><span class="line">$ hexo -v</span><br><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.17763 win32 x64</span><br><span class="line">node: 12.16.0</span><br><span class="line">v8: 7.8.279.23-node.31</span><br><span class="line">uv: 1.34.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1d</span><br><span class="line">cldr: 35.1</span><br><span class="line">icu: 64.2</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前端学习–vue创建项目&quot;&gt;&lt;a href=&quot;#前端学习–vue创建项目&quot; class=&quot;headerlink&quot; title=&quot;前端学习–vue创建项目&quot;&gt;&lt;/a&gt;前端学习–vue创建项目&lt;/h2&gt;&lt;h3 id=&quot;在桌面上创建一个项目&quot;&gt;&lt;a href=&quot;#在桌面
      
    
    </summary>
    
    
    
      <category term="-前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/03/01/hello-world/"/>
    <id>http://yoursite.com/2020/03/01/hello-world/</id>
    <published>2020-03-01T09:30:24.181Z</published>
    <updated>2020-03-01T09:30:24.183Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
