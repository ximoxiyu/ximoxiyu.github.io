<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-06T01:57:13.437Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ximoxiyu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>项目1-音乐播放器</title>
    <link href="http://yoursite.com/2020/03/05/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>http://yoursite.com/2020/03/05/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</id>
    <published>2020-03-05T04:02:24.000Z</published>
    <updated>2020-03-06T01:57:13.437Z</updated>
    
    <content type="html"><![CDATA[<p>目标：利用Vue的学习内容，完成大作业，制作一个音乐播放器(网易云)</p><h2 id="目标拆分"><a href="#目标拆分" class="headerlink" title="目标拆分"></a>目标拆分</h2><p>1.拆分组件(评论与进度条)<br>关键：理清哪一部分是进度条，哪一部分是评论，父子组件中如何实现的通信。<br>2.实现上下曲播放功能的切换<br>关键：所有歌存为一个数组songList【】,将每一首歌存为一个对象{}，含自身的name(歌曲名)，author,bgImg(封面),audio(播放地址),comments(评论),使用时songList[currentIndex].audio<br>注意在currentIndex在data中进行初始化！<br>3.一些细节<br>关于歌曲链接的存储，界面的优化等，本地存储如何写相对地址及怎么上传到云空间获取URL等，对目前已有框架的改进与优化等等。</p><ul><li><p><a href="https://www.cnblogs.com/pink-chen/p/11132940.html" target="_blank" rel="noopener">iconfont的使用</a></p></li><li><p>本地加载文件，如音乐链接,图片存放在src/assets下，新建文件夹img和music<br>使用时：import song1 from ‘./assets/music/1.mp3’ ,此时song1这个变量代表这个音乐的地址链</p><p>注：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  起初： </span><br><span class="line">&lt;div class=<span class="string">"bg"</span> style=<span class="string">"background-image: url(https://s2.ax1x.com/2020/01/27/1uPIAS.jpg)"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 背景图片 错误写法：--&gt;</span><br><span class="line">  &lt;div class=<span class="string">"bg"</span> style=<span class="string">"background-image: url(songList[currentIndex].bgImg)"</span>&gt;&lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">  正确写法：</span><br><span class="line">   &lt;div class=<span class="string">"bg"</span> :style=<span class="string">"&#123;backgroundImage:'url(' + songList[currentIndex].bgImg + ')'&#125;"</span>&gt;&lt;/div&gt;</span><br><span class="line">分析：</span><br><span class="line">最开始只有一首歌，无需样式绑定，直接style=<span class="string">"backgroundImage:url(地址)"</span></span><br><span class="line">多首歌：v-bind的绑定格式</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目标：利用Vue的学习内容，完成大作业，制作一个音乐播放器(网易云)&lt;/p&gt;
&lt;h2 id=&quot;目标拆分&quot;&gt;&lt;a href=&quot;#目标拆分&quot; class=&quot;headerlink&quot; title=&quot;目标拆分&quot;&gt;&lt;/a&gt;目标拆分&lt;/h2&gt;&lt;p&gt;1.拆分组件(评论与进度条)&lt;br&gt;关键
      
    
    </summary>
    
    
    
      <category term="Vue学习 Vue作业 项目" scheme="http://yoursite.com/tags/Vue%E5%AD%A6%E4%B9%A0-Vue%E4%BD%9C%E4%B8%9A-%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>Vue学习小结</title>
    <link href="http://yoursite.com/2020/03/03/Vue%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2020/03/03/Vue%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/</id>
    <published>2020-03-03T08:09:12.000Z</published>
    <updated>2020-03-03T10:39:22.314Z</updated>
    
    <content type="html"><![CDATA[<p>1.前7天通过制作音乐播放器，学习Vue知识，对比原生JS,Vue框架更加简单，容易上手。</p><a id="more"></a><p>2.通过总结整理Vue笔记，理清播放器的架构，基本学习流程：<br> 1)更改歌曲与作者的名字-插值，认识Vue<br> 2)控制播放、暂停–audio标签及属性src,controls和方法play(),pause(),同时认识了三条指令：v-bind绑定属性，v-if控制元素渲染，v-on事件监听(此时监听的是click事件)<br> 3)CD旋转–每隔一段时间进行旋转角度的增加<br> CSS中transform:rotate(30deg)属性，及JS中的定时器selnterval(函数,时间间隔),v-bind的深度使用，绑定class和style属性<br> 4)进度条–(当前时间/总时间)*100的百分比</p><ul><li>audio的两个属性duration(总时间),currentTime(当前播放位置，即播放了的时间，其返回值一直随播放改变);</li><li>两个事件canplay:浏览器播放音频时(音乐播放开始时触发);timeupdata:当前播放位置发生更改时(在音乐播放过程中一直触发)</li><li>格式转换-因duration和currentTime返回的时间格式带小数点，不是常规格式，需转换为00:00</li><li>小圆点–播放进度百分比，计算属性computed<br>5)评论列表的展示(仅展示已有，不添加)–v-for列表渲染,对比原生JS的for循环+DOM操作(增加子节点，子节点添加内容)，Vue的v-for更简单方便,数据多以数组形式存放data中<br>6）发表评论(写评论并添加到5)的已有列表中)–v-bind双向绑定,实时更改评论内容,同时利用Data()对象来获取当前日期:var createAt = new Date().toLocaleDateString()</li></ul><p>3.还有三节视频将制作好的音乐播放器项目进行项目迁移及组件的通信与抽离，最后根据几天的学习内容，优化播放器<br>4.大作业要求</p><ul><li>将网站上的现有播放器代码迁移到本地 </li><li>抽离进度条为组件（思考这个组件该接受什么参数） </li><li>抽离评论列表为组件&amp;评论列表样式优化 </li><li>完成上一曲，下一曲切换功能（需要考虑边界情况）</li></ul><p>5.总结一下在写大作业中遇到的问题：<br>1).组件中传递的数据只能在原组件中进行更改，传过去的是拷贝份，不可更改！（只读不改）<br>2).抽成组件的意思是：把一部分内容进行封装，以标签形式在父组件中进行使用其显示效果同没抽掉之前相同<br>3). :audioInfo子组件的props中的属性=”audioInfo”父组件的属性值<br>4).关于上下切换，每一首歌的自身内容建议封装成一个对象，几首歌，几个对象<br>5)导入文件的方法，放入assets中，其中song为第一首歌的地址链接<br>import song from ‘./assets/music/1.mp3’<br>在data中<br>    song: [song, song1,],<br>6.刚学会写博客，一枚努力学前端的小白,摸索前进，要求自己坚持写博客，坚持反思，进一步有一步的欢喜<br>7.【收获】练习用VScode写.md文件,基本语法掌握的不太熟练，所以排版会有些丑，多见谅;梳理了近期学习的Vue知识,从整体到局部再到整体，对学过的知识和笔记二次加工，对知识的理解更透彻;锻炼自己的总结能力和表达能力<br>8.最后感谢小黑和Alex在学习前端路上的帮助，给他们的公共号做个推广<br><a href="https://mp.weixin.qq.com/s/W_KNZyAqktN371gqM-IpQg" target="_blank" rel="noopener">小黑的前端课程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.前7天通过制作音乐播放器，学习Vue知识，对比原生JS,Vue框架更加简单，容易上手。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Vue学习" scheme="http://yoursite.com/tags/Vue%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="总结" scheme="http://yoursite.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>我的Vue学习03</title>
    <link href="http://yoursite.com/2020/03/03/%E6%88%91%E7%9A%84Vue%E5%AD%A6%E4%B9%A0III/"/>
    <id>http://yoursite.com/2020/03/03/%E6%88%91%E7%9A%84Vue%E5%AD%A6%E4%B9%A0III/</id>
    <published>2020-03-03T04:01:47.000Z</published>
    <updated>2020-03-03T10:39:15.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="5）实现评论列表–列表渲染"><a href="#5）实现评论列表–列表渲染" class="headerlink" title="5）实现评论列表–列表渲染"></a>5）实现评论列表–列表渲染</h2><h3 id="评论列表"><a href="#评论列表" class="headerlink" title="评论列表"></a>评论列表</h3><p>列表渲染：每个列表均由一系列相似的列表项组成</p><a id="more"></a><h4 id="原生JS的列表渲染-for循环-DOM操作"><a href="#原生JS的列表渲染-for循环-DOM操作" class="headerlink" title="原生JS的列表渲染(for循环 + DOM操作)"></a>原生JS的列表渲染(for循环 + DOM操作)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"comment-list"</span> id=<span class="string">"commentList"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">//1.获取DOM</span><br><span class="line">var commentList =document.getElementById(<span class="string">'commentList'</span>);</span><br><span class="line">//2.定义数组--评论列表内容,每条内容为一个对象,每个对象均有自身名字，日期，评论</span><br><span class="line">var comments=[</span><br><span class="line">    &#123;</span><br><span class="line">    name: <span class="string">'汪小黑'</span>,</span><br><span class="line">    comment: <span class="string">'赞赞赞'</span>,</span><br><span class="line">    createdAt: <span class="string">'2019/10/10'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    name: <span class="string">'alex'</span>,</span><br><span class="line">    comment: <span class="string">'666'</span>,</span><br><span class="line">    createdAt: <span class="string">'2019/10/11'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    name: <span class="string">'小二黑'</span>,</span><br><span class="line">    comment: <span class="string">'23333'</span>,</span><br><span class="line">    createdAt: <span class="string">'2019/10/12'</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line">//3.评论列表渲染函数</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">commentListRender</span></span>()&#123;</span><br><span class="line">    //1).先清空</span><br><span class="line">    commentList.innerHTML=<span class="string">''</span>;</span><br><span class="line">    //2).利用<span class="keyword">for</span>循环导入内容</span><br><span class="line">    <span class="keyword">for</span> (i=0; i &lt; comments.length; i++) &#123;</span><br><span class="line">    // 创建列表项</span><br><span class="line">    var commentListItem = document.createElement(<span class="string">'div'</span>);</span><br><span class="line">    //为&lt;div&gt;元素增加class</span><br><span class="line">    commentListItem.classList.add(<span class="string">'comment-list__item'</span>);</span><br><span class="line">   //<span class="variable">$&#123;comments[i]&#125;</span>.name为模板字符串，总体看是两个大块，一块为人名+时间，一块为评论</span><br><span class="line">    commentListItem.innerHTML = `&lt;div class=<span class="string">"comment-list__item-meta"</span>&gt;</span><br><span class="line">            &lt;div class=<span class="string">"comment-list__item-meta__name"</span>&gt;<span class="variable">$&#123;comments[i].name&#125;</span>&lt;/div&gt;</span><br><span class="line">            &lt;div class=<span class="string">"comment-list__item-meta__date"</span>&gt;<span class="variable">$&#123;comments[i].createdAt&#125;</span>&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">          &lt;div class=<span class="string">"comment-list__item-comment"</span>&gt;<span class="variable">$&#123;comments[i].comment&#125;</span>&lt;/div&gt;</span><br><span class="line">          `;</span><br><span class="line">    // 将列表项添加到列表当中</span><br><span class="line">    commentList.appendChild(commentListItem);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//4.最后调用该函数</span><br><span class="line">commentListRender();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="Vue实现：列表渲染指令v-for"><a href="#Vue实现：列表渲染指令v-for" class="headerlink" title="Vue实现：列表渲染指令v-for"></a>Vue实现：列表渲染指令v-for</h3><p>1.使用：item in items 形式的特殊语法，其中 items 是源数据数组，而 item 则是被迭代的数组元素的别名。<br> v-for=”(comment, index) in comments”<br>在元素中渲染  ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">html中标签中</span><br><span class="line">v-for=<span class="string">"comment in comments"</span> &#123;&#123;comment.name&#125;&#125;</span><br><span class="line">Vue实例data中</span><br><span class="line"> // 评论</span><br><span class="line">    comments: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'汪小黑'</span>,</span><br><span class="line">        comment: <span class="string">'赞赞赞'</span>,</span><br><span class="line">        createdAt: <span class="string">'2019/10/10'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'alex'</span>,</span><br><span class="line">        comment: <span class="string">'666'</span>,</span><br><span class="line">        createdAt: <span class="string">'2019/10/11'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'小二黑'</span>,</span><br><span class="line">        comment: <span class="string">'23333'</span>,</span><br><span class="line">        createdAt: <span class="string">'2019/10/12'</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    // 输入框的评论</span><br><span class="line">    inputtedComment: <span class="string">''</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>【总结】<br>v-bind用来绑定属性；v-if指令用来切换隐藏元素；v-on指令用来监听事件；v-for指令用来列表渲染<br>注：v-for不可在根元素上使用</p><h4 id="作业：渲染1-10-两种方法"><a href="#作业：渲染1-10-两种方法" class="headerlink" title="作业：渲染1-10(两种方法)"></a>作业：渲染1-10(两种方法)</h4><p>原生JS：获取节点，创建子节点，更改内容，添加子节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;原生JS&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">#app &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"app"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = document.getElementById(<span class="string">'app'</span>);</span><br><span class="line">        //</span><br><span class="line">        <span class="keyword">for</span> (var i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">            var div = document.createElement(<span class="string">'div'</span>);//创建新节点</span><br><span class="line">            div.innerHTML = `&lt;div&gt;<span class="variable">$&#123;i+1&#125;</span>&lt;/div&gt;`;//这个格式很重要，尤其是``,不是单引号</span><br><span class="line">            //或者将上述语句换为 div.innerHTML = i+1;</span><br><span class="line">            app.appendChild(div);//添加节点</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Vue实现方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;div v-for=<span class="string">"item in number"</span>&gt;&#123;&#123;item&#125;&#125;&lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">方案一：将列表内容直接写入data中</span><br><span class="line">const app = new Vue(&#123;</span><br><span class="line">            el: <span class="string">'#app'</span>,</span><br><span class="line">           data:&#123;  </span><br><span class="line">               number: [1,2,3,4,5,6,7,8,9,10]</span><br><span class="line">               &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">方案二：当数据多时，写函数</span><br><span class="line">const app = new Vue(&#123;</span><br><span class="line">            el: <span class="string">'#app'</span>,</span><br><span class="line">            data: &#123;</span><br><span class="line">                number: Array(),</span><br><span class="line">                //   number1:app.liClick(),写法错误，只能在外面调函数</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                <span class="function"><span class="title">liClick</span></span>() &#123;</span><br><span class="line">                    <span class="keyword">for</span> (var i = 0; i &lt; 100; i++)</span><br><span class="line">                        this.number = i + 1;</span><br><span class="line">                        <span class="built_in">return</span> this.number;</span><br><span class="line">                    &#125;  </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">//Vue实例外部调函数</span><br><span class="line">app.liClick()//v-for遍历的是number是函数执行后的number</span><br></pre></td></tr></table></figure><hr><h2 id="6）实现发表评论–表单输入绑定v-model"><a href="#6）实现发表评论–表单输入绑定v-model" class="headerlink" title="6）实现发表评论–表单输入绑定v-model"></a>6）实现发表评论–表单输入绑定v-model</h2><p>v-model=”message” //绑定message变量</p><h3 id="添加评论-双向绑定评论数据"><a href="#添加评论-双向绑定评论数据" class="headerlink" title="添加评论(双向绑定评论数据)"></a>添加评论(双向绑定评论数据)</h3><p>1.点击发送按钮，在控制台打印输入内容<br>v-bind双向绑定，click为触发事件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &lt;input v-model=<span class="string">" inputtedComment"</span> placeholder=<span class="string">"说点什么吧~~"</span>&gt; &lt;/input&gt;</span><br><span class="line">&lt;div class=<span class="string">"pub-button"</span> @click=<span class="string">"addComment"</span>&gt;发送&lt;/div&gt;</span><br><span class="line">//在控制台打印</span><br><span class="line"> <span class="function"><span class="title">addComment</span></span>() &#123;</span><br><span class="line">      console.log(this.inputtedComment)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>2.添加评论：改变comments数组，此数组内目前有三个对象，且每个对象目前有三个元素，其中有时间<br>v-for增加新对象,获取当前时间Date对象<br>关于为什么只修改时间：昵称固定，评论内容已有上步给出，仅剩获取当前时间<br>new Date()获得当前的日期<br>new Date().toLocaleDateString()可以获得当前年月日的一个字符串<br>【使用方法】var time = new Date().toLocaleDateString()<br><a href="https://www.w3school.com.cn/js/js_dates.asp" target="_blank" rel="noopener">Date()使用</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">addComment</span></span>() &#123;</span><br><span class="line">    //获取当前时间</span><br><span class="line">      var createdAt = new Date().toLocaleDateString();</span><br><span class="line">      var name = <span class="string">'汪小黑'</span>;</span><br><span class="line">      this.comments.push(&#123;</span><br><span class="line">        name: name,</span><br><span class="line">        comment: this.inputtedComment,</span><br><span class="line">        createdAt: createdAt</span><br><span class="line">      &#125;);</span><br><span class="line">      this.inputtedComment = <span class="string">''</span>;//评论获取后清空</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>【作业补充】<br>1.下面是Date实例方法的为：<br>getDate()——以数值返回天（1-31）；getMonth()——获取月（0-11）；getTime()——获取时间（从 1970 年 1 月 1 日至今）；getMinutes()——获取分（0-59）。<br>2.有4种方法创建新的日期对象：<br>new Date()<br>new Date(year, month, day, hours, minutes, seconds, milliseconds)<br>new Date(milliseconds)—毫秒<br>new Date(date string)–从日期字符串中创建一个新的日期对象<br>3.获取昨天此刻时间<br>注：JS将日期存储为毫秒</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 获取此刻的时间</span><br><span class="line">var now = new Date().getTime();</span><br><span class="line">// 获取昨天此刻的时间</span><br><span class="line">var yesterday = new Date(now - 24 * 3600 * 1000);//因为是毫秒，注意*1000</span><br><span class="line">// 打印时间</span><br><span class="line">console.log(yesterday.toLocaleString())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;5）实现评论列表–列表渲染&quot;&gt;&lt;a href=&quot;#5）实现评论列表–列表渲染&quot; class=&quot;headerlink&quot; title=&quot;5）实现评论列表–列表渲染&quot;&gt;&lt;/a&gt;5）实现评论列表–列表渲染&lt;/h2&gt;&lt;h3 id=&quot;评论列表&quot;&gt;&lt;a href=&quot;#评论列表&quot; class=&quot;headerlink&quot; title=&quot;评论列表&quot;&gt;&lt;/a&gt;评论列表&lt;/h3&gt;&lt;p&gt;列表渲染：每个列表均由一系列相似的列表项组成&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Vue学习" scheme="http://yoursite.com/tags/Vue%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>我的Vue学习02</title>
    <link href="http://yoursite.com/2020/03/02/%E6%88%91%E7%9A%84Vue%E5%AD%A6%E4%B9%A0II/"/>
    <id>http://yoursite.com/2020/03/02/%E6%88%91%E7%9A%84Vue%E5%AD%A6%E4%B9%A0II/</id>
    <published>2020-03-02T10:48:41.000Z</published>
    <updated>2020-03-03T10:39:18.366Z</updated>
    
    <content type="html"><![CDATA[<h2 id="3）实现封面的自动旋转–class与style绑定"><a href="#3）实现封面的自动旋转–class与style绑定" class="headerlink" title="3）实现封面的自动旋转–class与style绑定"></a>3）实现封面的自动旋转–class与style绑定</h2><h3 id="css中控制元素旋转的transform-rotate属性"><a href="#css中控制元素旋转的transform-rotate属性" class="headerlink" title="css中控制元素旋转的transform:rotate属性"></a>css中控制元素旋转的transform:rotate属性</h3><p>1)语法：transform:rotate(30deg)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[css]</span><br><span class="line">.CD2 &#123;</span><br><span class="line">  margin-left: 10px;</span><br><span class="line">  transform: rotate(180deg);//顺时针旋转180度</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="原生JS实现自动旋转（DOM操作）"><a href="#原生JS实现自动旋转（DOM操作）" class="headerlink" title="原生JS实现自动旋转（DOM操作）"></a>原生JS实现自动旋转（DOM操作）</h4><p>核心：封面CD旋转角度的不断增加，即定时增加元素的transform属性：rotate角度<br>实现：修改元素的style属性<br>obj.style.transform=”rotate(30deg)”  </p><h5 id="JS中定时器相关知识"><a href="#JS中定时器相关知识" class="headerlink" title="JS中定时器相关知识"></a>JS中定时器相关知识</h5><p>定时器：两种<br>1)仅执行一次就结束<br>2)每隔一段时间,重复执行某段代码（常用）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">【用法】</span><br><span class="line">const number =setInterval(code(多为函数),时间间隔(ms));//设置定时器</span><br><span class="line">clearInterval(number);//清除定时器</span><br><span class="line">【举例--倒计时】</span><br><span class="line">&lt;div id=<span class="string">"container"</span>&gt;10&lt;/div&gt;</span><br><span class="line">【JS】</span><br><span class="line">var container = document.getElementById(<span class="string">'container'</span>);</span><br><span class="line">var i = 10;</span><br><span class="line">var number = setInterval(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">  i--;</span><br><span class="line">  container.innerHTML = i;</span><br><span class="line">  <span class="keyword">if</span> (i &lt;= 0) &#123;</span><br><span class="line">    clearInterval(number);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, 1000)</span><br></pre></td></tr></table></figure><h4 id="封面CD的自动旋转"><a href="#封面CD的自动旋转" class="headerlink" title="封面CD的自动旋转"></a>封面CD的自动旋转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"main"</span>&gt;</span><br><span class="line">  &lt;div id=<span class="string">"CD"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;style&gt;.main &#123;</span><br><span class="line">  margin: 0 4%;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#CD &#123;</span></span><br><span class="line">  height: 200px;</span><br><span class="line">  width: 200px;</span><br><span class="line">  background-color: white;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background: center;</span><br><span class="line">  background-image: url(https://s2.ax1x.com/2020/01/27/1uPIAS.jpg);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 获取封面元素</span><br><span class="line">var <span class="built_in">cd</span> = document.getElementById(<span class="string">'CD'</span>);</span><br><span class="line">// 定义旋转间隔，单位ms，这里设定为每10ms旋转一次，间隔时间取值太大的话会使得旋转看起来有卡顿感</span><br><span class="line">var rotateDuration = 10;</span><br><span class="line">// 定义旋转角度变量</span><br><span class="line">var rotateDeg = 0;</span><br><span class="line">// 我们设定每60s封面旋转一圈，也就是360°</span><br><span class="line">// 这里计算的是每次旋转间隔需要旋转的度数</span><br><span class="line">var rotateStep = (360 / 60) * (rotateDuration / 1000);</span><br><span class="line"></span><br><span class="line">// 设定定时器，自动旋转</span><br><span class="line">setInterval(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">  // 设定元素当前的旋转角度</span><br><span class="line">  cd.style.transform = <span class="string">'rotate('</span> + rotateDeg + <span class="string">'deg)'</span>;</span><br><span class="line">  // 旋转角度增加</span><br><span class="line">  rotateDeg += rotateStep;</span><br><span class="line">&#125;, rotateDuration)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="Vue实现自动旋转，绑定style属性"><a href="#Vue实现自动旋转，绑定style属性" class="headerlink" title="Vue实现自动旋转，绑定style属性"></a>Vue实现自动旋转，绑定style属性</h4><p>理解：Vue框架通过数据驱动来尽量屏蔽底层的DOM操作，将重复的DOM操作交给Vue框架自动完成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Vue对style属性做了专门增强：字符串拼接、对象操作、数组操作（少）</span><br><span class="line">1)字符串<span class="string">''</span></span><br><span class="line"> v-bind:style=<span class="string">"'transform: rotate(' + rotateDeg + 'deg)'"</span></span><br><span class="line"> 说明：v-bind:style=<span class="string">"字符串"</span>，其中<span class="string">'transform: rotate('</span> + rotateDeg + <span class="string">'deg)'</span>为字符串，而<span class="string">' + rotateDeg + '</span>变量转字符串</span><br><span class="line">2)对象操作&#123;&#125;</span><br><span class="line"> v-bind:style=<span class="string">"&#123;</span></span><br><span class="line"><span class="string">        transform: 'rotate(' + rotateDeg + 'deg)'//类比原生JS内部格式</span></span><br><span class="line"><span class="string">      &#125;"</span></span><br><span class="line">      说明：类似CSS写法 属性：取值</span><br><span class="line">拓展--绑定一个对象变量rotateStyle</span><br><span class="line">v-bind:style=<span class="string">"rotateStyle"</span>，在Vue实例data中定义</span><br><span class="line">data: &#123;</span><br><span class="line">    rotateStyle: &#123;  //对象变量</span><br><span class="line">      transform: <span class="string">'rotate(90deg)'</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="实现自动旋转"><a href="#实现自动旋转" class="headerlink" title="实现自动旋转"></a>实现自动旋转</h3><p>核心：点播放按钮，旋转；暂停，停止旋转（清除定时器）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Vue使用：播放、暂停，旋转的切换day3&lt;/title&gt;</span><br><span class="line">    &lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    .main &#123;</span><br><span class="line">        margin: 0 4%;</span><br><span class="line">        display: flex;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        align-items: center;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">#CD &#123;</span></span><br><span class="line">        height: 200px;</span><br><span class="line">        width: 200px;</span><br><span class="line">        background-color: white;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        background: center;</span><br><span class="line">        background-image: url(https://s2.ax1x.com/2020/01/27/1uPIAS.jpg);</span><br><span class="line">      &#125;&lt;/style&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">        &lt;!--Vue的实现，绑定src--&gt;</span><br><span class="line">    &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">        &lt;!-- &lt;audio v-bind:src=<span class="string">"src"</span> controls&gt;&lt;/audio&gt; --&gt;</span><br><span class="line">        &lt;audio id=<span class="string">"player"</span> :src=<span class="string">"src"</span> &gt;&lt;/audio&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--v-on和v-if联合使用：点击按钮切换播放和暂停状态--&gt;</span><br><span class="line">        &lt;button v-if=<span class="string">"!isPlaying"</span>  v-on:click=<span class="string">"playMusic"</span>&gt;播放&lt;/button&gt;</span><br><span class="line">        &lt;button v-if=<span class="string">"isPlaying"</span>  @click=<span class="string">"pauseMusic"</span>&gt;暂停&lt;/button&gt;</span><br><span class="line">        &lt;!--加入CD旋转,绑定style的旋转属性(day3)--&gt;</span><br><span class="line">        &lt;div class=<span class="string">"main"</span>&gt;</span><br><span class="line">          &lt;div id=<span class="string">"CD"</span> v-bind:style=<span class="string">"&#123;</span></span><br><span class="line"><span class="string">            transform:'rotate('+rotateDeg+'deg)'&#125; "</span>&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">         // var music=document.getElementById(<span class="string">'player'</span>);//能否加在外面？？不能，this指代不明</span><br><span class="line">        //点击按钮切换播放和暂停状态</span><br><span class="line">        var a= new Vue(&#123;</span><br><span class="line">            el:<span class="string">"#app"</span>,</span><br><span class="line">            data:&#123;  //注意data的书写</span><br><span class="line">                src:<span class="string">"http://static.xhxly.cn/0e669980-57ba-11ea-a658-e9f0035cbd09.mp3"</span>,</span><br><span class="line">                isPlaying:<span class="literal">false</span>,// 默认状态不播放----用于播放、暂停的切换</span><br><span class="line">              //初始化</span><br><span class="line">                rotateDeg:0,//旋转角度</span><br><span class="line">                 clockNum:0 //定时器</span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123; //是methods，注意加s!!!</span><br><span class="line">                   <span class="function"><span class="title">playMusic</span></span>()&#123;</span><br><span class="line">                    var music=document.getElementById(<span class="string">'player'</span>);</span><br><span class="line">                      music.play();</span><br><span class="line">                      this.isPlaying=<span class="literal">true</span>;</span><br><span class="line">                      //封面开始旋转</span><br><span class="line">                      this.startRotate();</span><br><span class="line">                   &#125;,</span><br><span class="line">                   <span class="function"><span class="title">pauseMusic</span></span>()&#123;</span><br><span class="line">                    var music=document.getElementById(<span class="string">'player'</span>);</span><br><span class="line">                     music.pause();</span><br><span class="line">                     this.isPlaying=<span class="literal">false</span>;</span><br><span class="line">                     //封面暂停旋转</span><br><span class="line">                     this.pauseRotate();</span><br><span class="line">                   &#125;,</span><br><span class="line"></span><br><span class="line">                   //新增函数day3--旋转和暂停</span><br><span class="line">                   <span class="function"><span class="title">startRotate</span></span>()&#123;</span><br><span class="line">                     var rotateDuration=10;//10ms间隔</span><br><span class="line">                     var rotateStep=(360 /60)*(rotateDuration/1000);//每10ms旋转的角度</span><br><span class="line">                     //保存this--用于定时器内部</span><br><span class="line">                     var that=this;//很重要！！！！</span><br><span class="line"></span><br><span class="line">                     //设置定时器，自动旋转</span><br><span class="line">                     var clockNum=setInterval(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">                       that.rotateDeg += rotateStep;//外部的this,加的是间隔角度</span><br><span class="line">                     &#125;,rotateDuration);</span><br><span class="line"></span><br><span class="line">                       this.clockNum=clockNum;</span><br><span class="line">                      // ClockNum=clockNum;//用于暂停时,不推荐写，没有var定义，会默认挂在全局，即window.ClockNum</span><br><span class="line">                   &#125;,</span><br><span class="line"></span><br><span class="line">                   //暂停旋转封面</span><br><span class="line">                   <span class="function"><span class="title">pauseRotate</span></span>()&#123;</span><br><span class="line">                     clearInterval(this.clockNum);//注意this的使用！！！</span><br><span class="line">                    //  clearInterval(ClockNum);//普通变量似乎也行，局部变量没有作用域吗？这不是普通变量！！！</span><br><span class="line">                    //  clearInterval(clockNum);//不对，此时不可暂停</span><br><span class="line">                   &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="v-bind绑定class属性"><a href="#v-bind绑定class属性" class="headerlink" title="v-bind绑定class属性"></a>v-bind绑定class属性</h3><p>Vue中绑定class属性的方法（3种）<br>1.Js表达式 v-bind:class=”className”<br>【JS】<br>data: {<br>    className: ‘success tip’ //类名<br>  },<br>  【css】<br>  .success {<br>  color: green;<br>}<br>.tip {<br>  font-size: 30px;<br>}<br>[说明]:通过绑定Vue中className变量,来更改类名,对应到CSS中实现更改样式<br>2.对象绑定{类名：布尔值}<br>v-bind:class=”{fail: isFail, success: isSuccess, tip: isTip}”<br>data: {<br>    isFail: false,<br>    isSuccess: true,<br>    isTip: false,<br>  },<br>注：在CSS中有fail，success,tip三种类名<br>3.数组绑定(一次绑多个类名)是Js表达式的拓展<br>v-bind:class=”[className1, className2]”</p><hr><h2 id="4）实现进度条—计算属性"><a href="#4）实现进度条—计算属性" class="headerlink" title="4）实现进度条—计算属性"></a>4）实现进度条—计算属性</h2><h3 id="audio关于进度条的属性和方法"><a href="#audio关于进度条的属性和方法" class="headerlink" title="audio关于进度条的属性和方法"></a>audio关于进度条的属性和方法</h3><p>进度条：音乐总时间duration属性,当前已播放的时间currentTime属性<br>使用：event.target.duration;//target指向audio元素<br>两个事件：canplay: 浏览器播放音频时<br>         timeupdata:当前播放位置已更改时<br>使用–事件绑定： v-on:canplay=”handleCanPlay”<br>        v-on:timeupdate=”handleTimeUpdate”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var player = document.getElementById(<span class="string">'player'</span>);</span><br><span class="line">// 监听播放器的canplay事件</span><br><span class="line">player.oncanplay = <span class="keyword">function</span>(event) &#123;</span><br><span class="line">  console.log(<span class="string">'音频总时长（单位s/秒）：'</span>, event.target.duration);</span><br><span class="line">&#125;</span><br><span class="line">// 监听播放器的timeupdate事件</span><br><span class="line">player.ontimeupdate = <span class="keyword">function</span>(event) &#123;</span><br><span class="line">  console.log(<span class="string">'当前播放进度（单位s/秒）：'</span>, event.target.currentTime);</span><br><span class="line">&#125;</span><br><span class="line">【注】控制台会打印duration和currentTime结果</span><br></pre></td></tr></table></figure><h3 id="实现播放器的进度条"><a href="#实现播放器的进度条" class="headerlink" title="实现播放器的进度条"></a>实现播放器的进度条</h3><p>1.为将音频的duration和currentTime信息记录到实例Vue的data属性中，存为一个对象audioInfo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data:&#123;  </span><br><span class="line">                //播放器相关信息</span><br><span class="line">                audioInfo:&#123;</span><br><span class="line">                    duration:0,</span><br><span class="line">                   currentTime:0</span><br><span class="line">                &#125;,</span><br><span class="line">           &#125;,</span><br></pre></td></tr></table></figure><p>2.事件监听 v-on:事件=”函数”<br> v-on:canplay=”handleCanPlay”<br> v-on:timeupdate=”handleTimeUpdate”<br>【补充】<br>浏览器的编程模型–事件驱动，通过监听用户触发的各种“事件”（点击，输入等），利用JS来监听各种事件信息，做出相应处理！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 监听音频可以播放时的事件</span><br><span class="line">  handleCanPlay(event) &#123;</span><br><span class="line">    this.audioInfo.duration = event.target.duration;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 监听音频播放位置发送改变的事件</span><br><span class="line">  handleTimeUpdate(event) &#123;</span><br><span class="line">    this.audioInfo.currentTime = event.target.currentTime;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>3.因原始的时间数据带小数点  0.4333(单位s)—转换格式00:00</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span>  transferSecToTime(time) &#123;</span><br><span class="line">  var tempTime = Math.floor(time);//不可缺少，先取整</span><br><span class="line">  var min = 0;</span><br><span class="line">  var sec = 0;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (tempTime &gt; 60) &#123;</span><br><span class="line">    min = Math.floor(tempTime / 60);//注意math的大小写</span><br><span class="line">    sec = tempTime % 60;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    sec = tempTime;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (min &lt; 10) min = <span class="string">'0'</span> + min</span><br><span class="line">  <span class="keyword">if</span> (sec &lt; 10) sec = <span class="string">'0'</span> + sec</span><br><span class="line"></span><br><span class="line">  <span class="built_in">return</span> min + <span class="string">':'</span> + sec</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(transferSecToTime(100))</span><br></pre></td></tr></table></figure><h3 id="计算属性-amp-进度条的实现"><a href="#计算属性-amp-进度条的实现" class="headerlink" title="计算属性&amp;进度条的实现"></a>计算属性&amp;进度条的实现</h3><p>核心：算一下进度条上小圆点的位置：即当前播放进度百分比（计算属性：数据改变，自动更新）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 计算属性，使用的时候和使用data里的数据一样，this.progress</span><br><span class="line">  computed: &#123;</span><br><span class="line">    <span class="function"><span class="title">progress</span></span>() &#123;</span><br><span class="line">      // 计算属性progress依赖了duration和currentTime两个数据，</span><br><span class="line">      // 因此，每当这两个数据当中任意一个发生改变时</span><br><span class="line">      // 计算属性progress都会重新求值</span><br><span class="line">      var duration = this.audioInfo.duration || 1;//防止除数为0</span><br><span class="line">      var currentTime = this.audioInfo.currentTime;</span><br><span class="line">      <span class="built_in">return</span> (currentTime / duration) * 100; //返回百分比</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在渲染时，在html中找到关于描述小圆点的代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//应用计算属性：progress() 的返回值</span><br><span class="line">    &lt;div class=<span class="string">"already-line"</span>  :style=<span class="string">"'width:' + progress + '%'"</span>&gt;&lt;/div&gt;</span><br><span class="line">         &lt;div class=<span class="string">"play-point"</span> :style=<span class="string">"'left:' + progress + '%'"</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>【总代码】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Vue使用：day4&lt;/title&gt;</span><br><span class="line">    &lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    .main &#123;</span><br><span class="line">        margin: 0 4%;</span><br><span class="line">        display: flex;</span><br><span class="line">        justify-content: flex-start;</span><br><span class="line">        align-items: center;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      /*小圆点的样式*/</span><br><span class="line">      .already-line &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        height: 4px;</span><br><span class="line">        border-radius: 2px;</span><br><span class="line">        background-color: <span class="comment">#a9a39c;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .play-point &#123;</span><br><span class="line">        width: 6px;</span><br><span class="line">        height: 6px;</span><br><span class="line">        transition: all .2s linear;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        position: absolute;</span><br><span class="line">        background-color:blueviolet;</span><br><span class="line">&#125;</span><br><span class="line">      &lt;/style&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">        &lt;!--Vue的实现，绑定src--&gt;</span><br><span class="line">    &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">        &lt;!-- &lt;audio v-bind:src=<span class="string">"src"</span> controls&gt;&lt;/audio&gt; --&gt;</span><br><span class="line">        &lt;audio id=<span class="string">"player"</span> :src=<span class="string">"src"</span></span><br><span class="line">        v-on:canplay=<span class="string">"handleCanPlay"</span></span><br><span class="line">        v-on:timeupdate=<span class="string">"handleTimeUpdate"</span>&gt;&lt;/audio&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--v-on和v-if联合使用：点击按钮切换播放和暂停状态--&gt;</span><br><span class="line">        &lt;button v-if=<span class="string">"!isPlaying"</span>  v-on:click=<span class="string">"playMusic"</span>&gt;播放&lt;/button&gt;</span><br><span class="line">        &lt;button v-if=<span class="string">"isPlaying"</span>  @click=<span class="string">"pauseMusic"</span>&gt;暂停&lt;/button&gt;</span><br><span class="line">         &lt;!--进度条 小圆点--调用计算属性--&gt;</span><br><span class="line">         &lt;div class=<span class="string">"already-line"</span>  :style=<span class="string">"'width:' + progress + '%'"</span>&gt;&lt;/div&gt;</span><br><span class="line">         &lt;div class=<span class="string">"play-point"</span> :style=<span class="string">"'left:' + progress + '%'"</span>&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div&gt;&#123;&#123;TransferSecTotime(audioInfo.currentTime)&#125;&#125;/&#123;&#123;TransferSecTotime(audioInfo.duration)&#125;&#125;&lt;/div&gt;&lt;br/&gt;</span><br><span class="line">        &lt;!--进度条--&gt;</span><br><span class="line">        &lt;div class=<span class="string">'process'</span>&gt;</span><br><span class="line">            &lt;div&gt;音频总时长（单位s/秒）:&#123;&#123;TransferSecTotime(audioInfo.duration)&#125;&#125;&lt;/div&gt;</span><br><span class="line">            &lt;div&gt;当前播放进度(单位s/秒):&#123;&#123;TransferSecTotime(audioInfo.currentTime)&#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">         // var music=document.getElementById(<span class="string">'player'</span>);//能否加在外面？？不能，this指代不明</span><br><span class="line">        //点击按钮切换播放和暂停状态</span><br><span class="line">        var a= new Vue(&#123;</span><br><span class="line">            el:<span class="string">"#app"</span>,</span><br><span class="line">            data:&#123;  //注意data的书写</span><br><span class="line">           // src:<span class="string">"http://q4v2i1axn.bkt.clouddn.com/music1.mp3"</span>,</span><br><span class="line">                src:<span class="string">"http://static.xhxly.cn/0e669980-57ba-11ea-a658-e9f0035cbd09.mp3"</span>,</span><br><span class="line">                isPlaying:<span class="literal">false</span>,// 默认状态不播放----用于播放、暂停的切换</span><br><span class="line">                 //播放器相关信息</span><br><span class="line">                 audioInfo:&#123;</span><br><span class="line">                     duration:0,</span><br><span class="line">                    currentTime:0</span><br><span class="line">                 &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line"> // 计算属性，使用的时候和使用data里的数据一样，this.progress</span><br><span class="line"> computed: &#123;</span><br><span class="line">    <span class="function"><span class="title">progress</span></span>() &#123;</span><br><span class="line">      // 计算属性progress依赖了duration和currentTime两个数据，</span><br><span class="line">      // 因此，每当这两个数据当中任意一个发生改变时</span><br><span class="line">      // 计算属性progress都会重新求值</span><br><span class="line">      var duration = this.audioInfo.duration || 1;//音频未加载时，默认为0,不可做除数！！！</span><br><span class="line">      var currentTime = this.audioInfo.currentTime;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">return</span> (currentTime / duration) * 100;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">            methods:&#123; //是methods，注意加s!!!</span><br><span class="line">                   <span class="function"><span class="title">playMusic</span></span>()&#123;</span><br><span class="line">                    var music=document.getElementById(<span class="string">'player'</span>);</span><br><span class="line">                      music.play();</span><br><span class="line">                      this.isPlaying=<span class="literal">true</span>;</span><br><span class="line">                      //封面开始旋转</span><br><span class="line">                   &#125;,</span><br><span class="line">                   <span class="function"><span class="title">pauseMusic</span></span>()&#123;</span><br><span class="line">                    var music=document.getElementById(<span class="string">'player'</span>);</span><br><span class="line">                     music.pause();</span><br><span class="line">                     this.isPlaying=<span class="literal">false</span>;</span><br><span class="line">                     //封面暂停旋转</span><br><span class="line">                   &#125;,</span><br><span class="line">                    //新增</span><br><span class="line">                   // 监听音频可以播放时的事件，有event参数！！</span><br><span class="line">                    handleCanPlay(event)&#123;</span><br><span class="line">                     this.audioInfo.duration=event.target.duration;</span><br><span class="line">                   &#125;,</span><br><span class="line"></span><br><span class="line">                    // 监听音频播放位置发送改变的事件</span><br><span class="line">                    handleTimeUpdate(event)&#123;</span><br><span class="line">                      this.audioInfo.currentTime=event.target.currentTime;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    //将上述数字时间格式的转换 mm:ss</span><br><span class="line">                    TransferSecTotime(time)&#123;</span><br><span class="line">                        var tempTime=Math.floor(time);//取出时间只要整数秒！！！</span><br><span class="line">                        //初始化变量</span><br><span class="line">                        var min=0;</span><br><span class="line">                        var sec=0;</span><br><span class="line">                        //格式转换</span><br><span class="line">                        <span class="keyword">if</span>(tempTime &gt; 60)&#123;</span><br><span class="line">                            min= Math.floor(tempTime /60);//Math要大写！！长记性！！1</span><br><span class="line">                            sec=tempTime %60;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                         sec = tempTime;</span><br><span class="line">                         //字符串拼接</span><br><span class="line">                         <span class="keyword">if</span>(min&lt;10) min=<span class="string">'0'</span>+min;</span><br><span class="line">                         <span class="keyword">if</span>(sec&lt;10) sec=<span class="string">'0'</span>+sec;</span><br><span class="line">                         <span class="built_in">return</span> min +<span class="string">':'</span> +sec;</span><br><span class="line">                     &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="5）实现评论列表–列表渲染"><a href="#5）实现评论列表–列表渲染" class="headerlink" title="5）实现评论列表–列表渲染"></a>5）实现评论列表–列表渲染</h2><h2 id="6）实现发表评论–表单输入绑定"><a href="#6）实现发表评论–表单输入绑定" class="headerlink" title="6）实现发表评论–表单输入绑定"></a>6）实现发表评论–表单输入绑定</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;3）实现封面的自动旋转–class与style绑定&quot;&gt;&lt;a href=&quot;#3）实现封面的自动旋转–class与style绑定&quot; class=&quot;headerlink&quot; title=&quot;3）实现封面的自动旋转–class与style绑定&quot;&gt;&lt;/a&gt;3）实现封面的自动旋转–class与style绑定&lt;/h2&gt;&lt;h3 id=&quot;css中控制元素旋转的transform-rotate属性&quot;&gt;&lt;a href=&quot;#css中控制元素旋转的transform-rotate属性&quot; class=&quot;headerlink&quot; title=&quot;css中控制元素旋转的transform:rotate属性&quot;&gt;&lt;/a&gt;css中控制元素旋转的transform:rotate属性&lt;/h3&gt;&lt;p&gt;1)语法：transform:rotate(30deg)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[css]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.CD2 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  margin-left: 10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  transform: rotate(180deg);//顺时针旋转180度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Vue学习" scheme="http://yoursite.com/tags/Vue%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>写博客随笔</title>
    <link href="http://yoursite.com/2020/03/02/%E9%9A%8F%E7%AC%94/"/>
    <id>http://yoursite.com/2020/03/02/%E9%9A%8F%E7%AC%94/</id>
    <published>2020-03-02T07:42:15.000Z</published>
    <updated>2020-03-03T10:40:21.701Z</updated>
    
    <content type="html"><![CDATA[<h2 id="利用VScode写markdown"><a href="#利用VScode写markdown" class="headerlink" title="利用VScode写markdown"></a>利用VScode写markdown</h2><p>  通过百度和坚持使用，逐渐熟悉.md的格式，利用博客记录学习前端的过程，总结笔记，push自己走出舒适区</p><a id="more"></a><h2 id="为什么写博客"><a href="#为什么写博客" class="headerlink" title="为什么写博客"></a>为什么写博客</h2><p>  1）发现问题，解决问题，记录方法，分享借鉴</p><p>  2）在写作的过程中，再次梳理知识体系</p><p>  3）坚持学习，坚持记笔记，坚持动手测试</p><p>  4）最重要的是迈出第一步，之后进一寸有一寸的欢喜</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;利用VScode写markdown&quot;&gt;&lt;a href=&quot;#利用VScode写markdown&quot; class=&quot;headerlink&quot; title=&quot;利用VScode写markdown&quot;&gt;&lt;/a&gt;利用VScode写markdown&lt;/h2&gt;&lt;p&gt;  通过百度和坚持使用，逐渐熟悉.md的格式，利用博客记录学习前端的过程，总结笔记，push自己走出舒适区&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>我的Vue学习01</title>
    <link href="http://yoursite.com/2020/03/02/Vue%E7%AC%AC%E4%B8%89%E6%9C%9F%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/03/02/Vue%E7%AC%AC%E4%B8%89%E6%9C%9F%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-03-02T07:40:01.000Z</published>
    <updated>2020-03-03T10:39:23.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程安排-9-1"><a href="#课程安排-9-1" class="headerlink" title="课程安排(9+1)"></a>课程安排(9+1)</h2><h2 id="1）播放器的页面信息展示–模板语法"><a href="#1）播放器的页面信息展示–模板语法" class="headerlink" title="1）播放器的页面信息展示–模板语法"></a>1）播放器的页面信息展示–模板语法</h2><p>vue:渐进式框架，省写dom操作<br>Vue框架的核心思想是数据驱动</p><h3 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">插值：&#123;&#123;&#125;&#125;,内可为变量、单个表达式</span><br><span class="line">注：正确写法</span><br><span class="line">&#123;&#123; 1&gt;2 ? message : message + <span class="string">'1'</span> &#125;&#125;</span><br><span class="line">错误写法！！！</span><br><span class="line">1）不能为语句</span><br><span class="line">~~&#123;&#123;var a=1&#125;&#125;  ~~</span><br><span class="line">2）不能为多个表达式，以下为三元</span><br><span class="line">~~&#123;&#123;<span class="keyword">if</span> (ok)&#123;<span class="built_in">return</span> message&#125;&#125;&#125;  ~~</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//在html中</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;div id=<span class="string">"app"</span>&gt; &#123;&#123;message&#125;&#125;&lt;/div&gt;</span><br><span class="line">//在js中</span><br><span class="line">const app = new Vue(&#123;</span><br><span class="line">    el：<span class="string">'#app'</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        message:<span class="string">'你好'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">过程分析：1）html引入Vue库，在js中新建Vue实例，由el:<span class="string">'#app'</span>将页面上id=<span class="string">'app'</span>的节点绑定（即div标签）</span><br><span class="line">2）Vue实例监听data中message的改动---反应在&#123;&#123;message&#125;&#125;上</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;message&#125;&#125;,啧啧啧&lt;/h2&gt;</span><br><span class="line">   &lt;!-- Mustache的语法不仅可以直接写变量，还可以写简单表达式 --&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;firstName + lastName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;firstName + <span class="string">" "</span> + lastName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;firstName&#125;&#125;&#123;&#123;lastName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">   &lt;h2&gt;&#123;&#123;count * 2&#125;&#125;&lt;/h2&gt;</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">关于计算(数值与字符串)</span><br><span class="line">其中 message:17</span><br><span class="line">1)&#123;&#123;message + <span class="string">'12'</span>&#125;&#125;-----1712</span><br><span class="line">2)&#123;&#123;message + 12&#125;&#125;----29</span><br><span class="line">若：message:<span class="string">'17'</span></span><br><span class="line">&#123;&#123;message + 12&#125;&#125;----1712</span><br></pre></td></tr></table></figure><h3 id="原生js-VS-vue"><a href="#原生js-VS-vue" class="headerlink" title="原生js VS vue"></a>原生js VS vue</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">【目标】改变页面hello world</span><br><span class="line">先找此节点，再改节点内容</span><br><span class="line">**只改变message，页面自动变（仅关注数据）**</span><br></pre></td></tr></table></figure><hr><h2 id="2-实现点击播放音乐–指令-amp-事件监听"><a href="#2-实现点击播放音乐–指令-amp-事件监听" class="headerlink" title="2)实现点击播放音乐–指令&amp;事件监听"></a>2)实现点击播放音乐–指令&amp;事件监听</h2><h3 id="audio标签的学习"><a href="#audio标签的学习" class="headerlink" title="audio标签的学习"></a>audio标签的学习</h3><p>1.audio的属性使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio src=<span class="string">"http://q4v2i1axn.bkt.clouddn.com/music1.mp3"</span> controls&gt;&lt;/audio&gt;</span><br><span class="line">属性：1）src---资源位置</span><br><span class="line">2）controls--是否展示进度条</span><br><span class="line">进度条作用：控制音频的播放与暂停及当前的播放进度</span><br><span class="line">3）注：音乐播放器中的进度条与控制播放暂停自己定义，故删去controls属性</span><br></pre></td></tr></table></figure><p>2.audio标签的方法<br>play:播放音频<br>pause:暂停音频</p><h4 id="原生js写音乐播放器"><a href="#原生js写音乐播放器" class="headerlink" title="原生js写音乐播放器"></a>原生js写音乐播放器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">【html】</span><br><span class="line">&lt;audio id=<span class="string">"player"</span> src=<span class="string">"http://q4v2i1axn.bkt.clouddn.com/music1.mp3"</span>&gt;&lt;/audio&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"playMusic()"</span>&gt;播放&lt;/button&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"pauseMusic()"</span>&gt;暂停&lt;/button&gt;</span><br><span class="line">【js】</span><br><span class="line">//获取DOM节点</span><br><span class="line">var player = document.querySelector(<span class="string">'#player'</span>);</span><br><span class="line">// 播放音乐</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">playMusic</span></span>() &#123;</span><br><span class="line">  player.play();  // 调用play方法</span><br><span class="line">&#125;</span><br><span class="line">// 暂停播放</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">pauseMusic</span></span>() &#123;</span><br><span class="line">  player.pause();  // 调用pause方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Vue中的指令及事件监听"><a href="#Vue中的指令及事件监听" class="headerlink" title="Vue中的指令及事件监听"></a>Vue中的指令及事件监听</h3><p>指令：带v-前缀的特殊属性，常用v-bind,v-on,v-if<br>1)利用v-bind绑定属性，将audio标签中的src的属性值写入Vue实例的data中 v-bind:src(原标签属性)=’audio’(Vue实例data中定义的属性)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.v-bind用于绑定一个或多个属性值，开发中，常需要动态绑定src/href/类class/样式style</span><br><span class="line">2.语法糖:</span><br><span class="line">3.绑定class属性</span><br><span class="line">1)直接赋值class属性  &lt;h2 class=<span class="string">"active"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">2）绑定一个，相比（1）没优点 &lt;h2 :class=<span class="string">"active"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">3)v-bind动态绑定class属性（对象语法）&#123;&#125;</span><br><span class="line">&lt;h2 class=<span class="string">"title"</span> :class=<span class="string">"&#123;'active': isActive, 'line': isLine&#125;"</span>&gt;Hello World&lt;/h2&gt;</span><br><span class="line">4)v-bind动态绑定class(数组用法)--少[]</span><br><span class="line">&lt;h2 class=<span class="string">"title"</span> :class=<span class="string">"['active', 'line']"</span>&gt;Hello World&lt;/h2&gt; --[]加<span class="string">''</span>字符串，不加是变量</span><br><span class="line">5)v-bind动态绑定style(对象语法)</span><br><span class="line"> &lt;!-- &lt;h2 :style=<span class="string">"&#123;key(属性名):value(属性值)&#125;"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt; --&gt;</span><br><span class="line">    &lt;!--方法一 加单引号，当成字符串解析 --&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"&#123;fontSize:'50px'&#125;"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;!--方法二 不加单引号，变量解析 --&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"&#123;fontSize:fontSize&#125;"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;!--方法三 函数--&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"getStyle()"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">6)v-bind动态绑定style(数组语法)</span><br><span class="line"> &lt;!--两种方法--&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"[baseStyle]"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2 :style=<span class="string">"getStyle()"</span>&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span><br></pre></td></tr></table></figure><p>2)v-if:控制元素是否渲染(用的不多)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 v-if=<span class="string">"isFlag"</span>&gt;isFlag为<span class="literal">true</span>显示这个&lt;/h2&gt;</span><br><span class="line">v-if指令就是根据=号后边的变量的取值，来判断是否渲染这个元素【结合标签使用，决定html是否渲染此标签】</span><br><span class="line">1.&lt;!--​v-if用于条件判断，判断Dom元素是否显示。或者销毁元素或组件,单独使用v-if，变量为布尔值，为<span class="literal">true</span>才渲染Dom</span><br><span class="line">2. v-show的变量也是布尔值，为<span class="literal">true</span>才显示内容，类似css的display</span><br><span class="line">3. v-if、v-else、v-else-if联合使用相当于<span class="keyword">if</span>、elseif、<span class="keyword">else</span>，但是在条件比较多的时候建议使用计算属性--&gt;</span><br><span class="line">4. &lt;!-- 添加key主要是为了让vue不复用dom，如果不添加vue底层会复用dom --&gt;</span><br><span class="line"> &lt;!--v-if看似和v-show实现一样的效果，但是内部v-show只是用css将操作的元素隐藏显示，</span><br><span class="line">    而v-if是新增和删除元素。v-show只是操作元素的style属性display，都没会被创建--&gt;</span><br></pre></td></tr></table></figure><p>3)v-on:事件监听<br>v-on:事件名=”函数名”（定义在methods中，不加())</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1.参数传参</span><br><span class="line"> &lt;!-- 事件没传参，两种方式均可 --&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick"</span>&gt;按钮1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick()"</span>&gt;按钮2&lt;/button&gt;</span><br><span class="line">    &lt;!-- 事件调用方法传参，写函数时候省略小括号，但是函数本身需要传递一个参数 --&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick2(123)"</span>&gt;按钮3&lt;/button&gt;</span><br><span class="line">    &lt;!--报错、默认将原生事件event传递,同按钮6前半部分--&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick2()"</span>&gt;按钮4&lt;/button&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick2"</span>&gt;按钮5&lt;/button&gt;</span><br><span class="line">    &lt;!-- 事件调用时候需要传入event还需要传入其他参数 ，如何手动的获取到浏览器参数的event对象: <span class="variable">$event</span>--&gt;</span><br><span class="line">    &lt;button @click=<span class="string">"btnClick3(<span class="variable">$event</span>,123)"</span>&gt;按钮6&lt;/button&gt;</span><br><span class="line">2.v-on的修饰符的使用</span><br><span class="line">&lt;!--1. 点击--.stop的使用，btn的click事件不会传播，不会冒泡到上层，调用event.stopPropagation() --&gt;</span><br><span class="line">    &lt;div @click=<span class="string">"divClick"</span>&gt;</span><br><span class="line">        &lt;button @click.stop=<span class="string">"btnClick"</span>&gt;按钮1&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 2. 提交--.prevent 调用event.preventDefault阻止默认行为  --&gt;</span><br><span class="line">    &lt;form action=<span class="string">"www.baidu.com"</span>&gt;</span><br><span class="line">      &lt;button <span class="built_in">type</span>=<span class="string">"submit"</span> @click.prevent=<span class="string">"submitClick"</span>&gt;提交&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;!--3. 文本框---监听键盘的事件 --&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> @click.enter=<span class="string">"key-up"</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="补充拓展–监听元素的点击事件"><a href="#补充拓展–监听元素的点击事件" class="headerlink" title="补充拓展–监听元素的点击事件"></a>补充拓展–监听元素的点击事件</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[原生js]</span><br><span class="line">1.直接写在html上---onclick</span><br><span class="line">&lt;button onclick=<span class="string">"click()"</span>&gt;click-me&lt;/button&gt;</span><br><span class="line">2.指定onclick属性</span><br><span class="line">&lt;button id=<span class="string">"btn"</span>&gt;click-me&lt;/button&gt;</span><br><span class="line">var btn=document.getElementById(<span class="string">'btn'</span>);</span><br><span class="line">btn.onclick=<span class="function"><span class="title">function</span></span>()&#123;&#125;</span><br><span class="line">3.调用addEventListener方法</span><br><span class="line">&lt;button id=<span class="string">"btn"</span>&gt;click-me&lt;/button&gt;</span><br><span class="line">var btn=document.getElementById(<span class="string">'btn'</span>);</span><br><span class="line">btn.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="title">function</span></span>()&#123;&#125;)</span><br><span class="line">注：2.3方法的区别，更习惯于用2，3可以加多个函数！但兼容性问题</span><br><span class="line">4.Vue框架--v-on事件绑定</span><br><span class="line">&lt;button v-on:click=<span class="string">"click"</span>&gt;click-me&lt;/button&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="3）实现封面的自动旋转–class与style绑定"><a href="#3）实现封面的自动旋转–class与style绑定" class="headerlink" title="3）实现封面的自动旋转–class与style绑定"></a>3）实现封面的自动旋转–class与style绑定</h2><h2 id="4）实现进度条—计算属性"><a href="#4）实现进度条—计算属性" class="headerlink" title="4）实现进度条—计算属性"></a>4）实现进度条—计算属性</h2><h2 id="5）实现评论列表–列表渲染"><a href="#5）实现评论列表–列表渲染" class="headerlink" title="5）实现评论列表–列表渲染"></a>5）实现评论列表–列表渲染</h2><h2 id="6）实现发表评论–表单输入绑定"><a href="#6）实现发表评论–表单输入绑定" class="headerlink" title="6）实现发表评论–表单输入绑定"></a>6）实现发表评论–表单输入绑定</h2><h2 id="7）-视频-本地搭建vue-Hello-World"><a href="#7）-视频-本地搭建vue-Hello-World" class="headerlink" title="7）[视频]本地搭建vue Hello World"></a>7）[视频]本地搭建vue Hello World</h2><h2 id="8）-视频-迁移项目到本地"><a href="#8）-视频-迁移项目到本地" class="headerlink" title="8）[视频]迁移项目到本地"></a>8）[视频]迁移项目到本地</h2><h2 id="9）-视频-抽离子组件（父子组件的通信）"><a href="#9）-视频-抽离子组件（父子组件的通信）" class="headerlink" title="9）[视频]抽离子组件（父子组件的通信）"></a>9）[视频]抽离子组件（父子组件的通信）</h2><h2 id="10）大作业"><a href="#10）大作业" class="headerlink" title="10）大作业"></a>10）大作业</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;课程安排-9-1&quot;&gt;&lt;a href=&quot;#课程安排-9-1&quot; class=&quot;headerlink&quot; title=&quot;课程安排(9+1)&quot;&gt;&lt;/a&gt;课程安排(9+1)&lt;/h2&gt;&lt;h2 id=&quot;1）播放器的页面信息展示–模板语法&quot;&gt;&lt;a href=&quot;#1）播放器的页面信息展示–模板语法&quot; class=&quot;headerlink&quot; title=&quot;1）播放器的页面信息展示–模板语法&quot;&gt;&lt;/a&gt;1）播放器的页面信息展示–模板语法&lt;/h2&gt;&lt;p&gt;vue:渐进式框架，省写dom操作&lt;br&gt;Vue框架的核心思想是数据驱动&lt;/p&gt;
&lt;h3 id=&quot;模板语法&quot;&gt;&lt;a href=&quot;#模板语法&quot; class=&quot;headerlink&quot; title=&quot;模板语法&quot;&gt;&lt;/a&gt;模板语法&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;插值：&amp;#123;&amp;#123;&amp;#125;&amp;#125;,内可为变量、单个表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注：正确写法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123; 1&amp;gt;2 ? message : message + &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt; &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;错误写法！！！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1）不能为语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~~&amp;#123;&amp;#123;var a=1&amp;#125;&amp;#125;  ~~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2）不能为多个表达式，以下为三元&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~~&amp;#123;&amp;#123;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ok)&amp;#123;&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; message&amp;#125;&amp;#125;&amp;#125;  ~~&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Vue学习" scheme="http://yoursite.com/tags/Vue%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>我的Vue学习04</title>
    <link href="http://yoursite.com/2020/03/01/first/"/>
    <id>http://yoursite.com/2020/03/01/first/</id>
    <published>2020-03-01T11:41:29.000Z</published>
    <updated>2020-03-03T10:39:29.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端学习–vue创建项目"><a href="#前端学习–vue创建项目" class="headerlink" title="前端学习–vue创建项目"></a>前端学习–vue创建项目</h2><h3 id="在桌面上创建一个项目"><a href="#在桌面上创建一个项目" class="headerlink" title="在桌面上创建一个项目"></a>在桌面上创建一个项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//在命令行窗口打开</span><br><span class="line"><span class="built_in">cd</span> desktop</span><br><span class="line"><span class="built_in">cd</span> sun //创建sun文件夹</span><br><span class="line">vue create 项目名</span><br><span class="line"><span class="built_in">cd</span> 项目名</span><br></pre></td></tr></table></figure><h3 id="先切换再执行"><a href="#先切换再执行" class="headerlink" title="先切换再执行"></a>先切换再执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm run build </span><br><span class="line">//在根目录下新建vue.config.js并在内添加代码</span><br><span class="line">module.exports=&#123;</span><br><span class="line">    publicPath:<span class="string">'./'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="在App-vue中修改内容"><a href="#在App-vue中修改内容" class="headerlink" title="在App.vue中修改内容"></a>在App.vue中修改内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br><span class="line">//打开<span class="built_in">local</span>中的地址，用ctrl+C来执行退出</span><br></pre></td></tr></table></figure><h3 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">package.json----项目入口Main.js---根项目组件App.vue---项目子组件helloworld.vue</span><br></pre></td></tr></table></figure><h4 id="纪念第一篇博客"><a href="#纪念第一篇博客" class="headerlink" title="纪念第一篇博客"></a>纪念第一篇博客</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">写博客：</span><br><span class="line">$ hexo n <span class="string">"文章名"</span> //新建文章</span><br><span class="line">$ hexo d -g   //推送到服务器</span><br><span class="line">我的安装版本号</span><br><span class="line">$ hexo -v</span><br><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.17763 win32 x64</span><br><span class="line">node: 12.16.0</span><br><span class="line">v8: 7.8.279.23-node.31</span><br><span class="line">uv: 1.34.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1d</span><br><span class="line">cldr: 35.1</span><br><span class="line">icu: 64.2</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前端学习–vue创建项目&quot;&gt;&lt;a href=&quot;#前端学习–vue创建项目&quot; class=&quot;headerlink&quot; title=&quot;前端学习–vue创建项目&quot;&gt;&lt;/a&gt;前端学习–vue创建项目&lt;/h2&gt;&lt;h3 id=&quot;在桌面上创建一个项目&quot;&gt;&lt;a href=&quot;#在桌面上创建一个项目&quot; class=&quot;headerlink&quot; title=&quot;在桌面上创建一个项目&quot;&gt;&lt;/a&gt;在桌面上创建一个项目&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//在命令行窗口打开&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; desktop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; sun //创建sun文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vue create 项目名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; 项目名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;先切换再执行&quot;&gt;&lt;a href=&quot;#先切换再执行&quot; class=&quot;headerlink&quot; title=&quot;先切换再执行&quot;&gt;&lt;/a&gt;先切换再执行&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm run build &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//在根目录下新建vue.config.js并在内添加代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;module.exports=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    publicPath:&lt;span class=&quot;string&quot;&gt;&#39;./&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Vue学习" scheme="http://yoursite.com/tags/Vue%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/03/01/hello-world/"/>
    <id>http://yoursite.com/2020/03/01/hello-world/</id>
    <published>2020-03-01T09:30:24.181Z</published>
    <updated>2020-03-03T10:39:26.640Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
